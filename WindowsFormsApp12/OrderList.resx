<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>