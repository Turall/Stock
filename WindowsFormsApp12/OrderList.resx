<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>