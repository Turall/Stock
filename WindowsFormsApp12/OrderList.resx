<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>